{
  "keyboard_shortcut": "", 
  "name": "Build", 
  "language": "JavaScript", 
  "trigger_enabled": 0, 
  "rank": 100, 
  "trigger": "trigger_postopen", 
  "value": [
    "// summary:", 
    "//\t\tScript to build the xpi", 
    "// description:", 
    "//\t\tScript to build an xpi, running koext build against the app directory.", 
    "", 
    "var project = ko.macros.current.project;", 
    "", 
    "var koOs = Components.classes['@activestate.com/koOs;1'].", 
    "\tgetService(Components.interfaces.koIOs);", 
    "", 
    "var koSysUtils = Components.classes[\"@activestate.com/koSysUtils;1\"].", 
    "\tgetService(Components.interfaces.koISysUtils);", 
    "", 
    "var appInfo = Components.classes[\"@mozilla.org/xre/app-info;1\"].", 
    "\tgetService(Components.interfaces.nsIXULRuntime);", 
    "", 
    "var koDirs = Components.classes['@activestate.com/koDirs;1'].", 
    "\tgetService(Components.interfaces.koIDirs);", 
    "\t", 
    "var koOsPath = Components.classes['@activestate.com/koOsPath;1'].", 
    "    getService(Components.interfaces.koIOsPath);", 
    "", 
    "var pythonExe = koDirs.pythonExe;", 
    "var projectDir = ko.interpolate.interpolateString('%p');", 
    "var scriptName = 'koext';", 
    "", 
    "if(appInfo.OS == 'WINNT'){", 
    "\tscriptName += \".py\"; ", 
    "}", 
    "", 
    "var arr = [koDirs.sdkDir, 'bin', scriptName]", 
    "var app = koOs.path.joinlist(arr.length, arr);", 
    "", 
    "var cmd = '\"' + pythonExe + '\" \"' + app + '\" build -d \"' + projectDir + '\\\\app\"';", 
    "", 
    "if(appInfo.OS == 'WINNT'){", 
    "\tcmd = '\"' + cmd + '\"';", 
    "}", 
    "", 
    "var cwd = koDirs.mozBinDir;", 
    "", 
    "cmd = '\"' + projectDir + '\\\\.komodotools\\\\copyApp.bat\" \"' + projectDir + '\"';", 
    "cmd += \" {'cwd': u'\"+cwd+\"'}\";", 
    "ko.run.runEncodedCommand(window, cmd, function(){", 
    "\tvar rdfDoc = getRdfXml();", 
    "\tvar Document = rdfDoc.getElementsByTagName(\"Description\");", 
    "", 
    "\tif(Document.length > 0){", 
    "\t\tvar children = getChildElements(Document[0]);", 
    "\t\tvar emData = parseEmData(children);", 
    "\t\tvar files = allFiles(ko.interpolate.interpolateString('%p') + \"\\\\build\\\\app\");", 
    "\t\treplaceTemplateData(files, emData)", 
    "\t}", 
    "\t", 
    "\tcmd = '\"' + projectDir + '\\\\.komodotools\\\\moveBuild.bat\" \"' + projectDir + '\" \"' + pythonExe + '\" \"' + app + '\"';", 
    "\tcmd += \" {'cwd': u'\"+cwd+\"'}\";", 
    "\tko.run.runEncodedCommand(window, cmd, function(){", 
    "\t\tko.statusBar.AddMessage('Build complete', 'projects', 5000, true);", 
    "\t\tko.projects.manager.saveProject(project);", 
    "\t});", 
    "});", 
    "", 
    "function replaceTemplateData(files, data){", 
    "\tvar rx = /\\<\\%\\=.*?\\%>/m;", 
    "\t", 
    "\tfiles.forEach(function(file){", 
    "\t\tvar content = readFile(file);", 
    "\t\tvar test = rx.test(content);", 
    "\t\t", 
    "\t\tif(rx.test(content)){", 
    "\t\t\twhile(rx.test(content)){", 
    "\t\t\t\tcontent = replaceTemplateTagWithData(content, data);", 
    "\t\t\t}", 
    "\t\t\twriteFile(file, content);", 
    "\t\t}", 
    "\t});", 
    "}", 
    "", 
    "function replaceTemplateTagWithData(text, data){", 
    "\tvar rx = /\\<\\%\\=(.*?)\\%>/m;", 
    "\t", 
    "\tmatch = rx.exec(text);", 
    "\tif(match){", 
    "\t\tvar lookup = trimStr(match[1]);", 
    "\t\tvar value = data[lookup];", 
    "\t\t", 
    "\t\tif(value){", 
    "\t\t\ttext = text.replace(match[0], value);", 
    "\t\t}else{", 
    "\t\t\ttext = text.replace(match[0], \"\");", 
    "\t\t}", 
    "\t}", 
    "\t", 
    "\treturn text", 
    "}", 
    "", 
    "function trimStr(str){", 
    "\treturn str.replace(/^\\s+|\\s+$/g, '');", 
    "}", 
    "", 
    "function allFiles(path, files){", 
    "\tfiles = files || [];", 
    "\t", 
    "\tvar dirList = koOs.listdir(path, {});", 
    "\tfor(var n = 0; n < dirList.length; n++){", 
    "\t\tvar cFile = path + \"\\\\\" + dirList[n];", 
    "\t\t", 
    "\t\tif(koOsPath.isdir(cFile)){", 
    "\t\t\tfiles = allFiles(cFile, files);", 
    "\t\t}else{", 
    "\t\t\tfiles.push(cFile)", 
    "\t\t}", 
    "\t}", 
    "\t", 
    "\treturn files;", 
    "}", 
    "", 
    "function getRdfXml(){", 
    "\tvar projectDir = ko.interpolate.interpolateString('%p');", 
    "\tvar installRdf = projectDir + \"\\\\build\\\\app\\\\install.rdf\";", 
    "", 
    "\tvar XMLParser = new DOMParser();", 
    "\tvar rdfDoc = XMLParser.parseFromString(", 
    "\t\treadFile(installRdf),", 
    "\t\t\"text/xml\"", 
    "\t);", 
    "\t", 
    "\treturn rdfDoc;", 
    "}", 
    "", 
    "function parseEmData(elements){", 
    "\tvar data = {};", 
    "\t", 
    "\telements.forEach(function(element){", 
    "\t\tif(/^em\\:/.test(element.tagName)){", 
    "\t\t\tvar id = element.tagName.replace(\"em:\", \"\");", 
    "\t\t\tdata[id] = element.textContent;", 
    "\t\t}", 
    "\t});", 
    "\t", 
    "\treturn data;", 
    "}", 
    "", 
    "function getChildElements(node){", 
    "\tvar elements = [];", 
    "\t", 
    "\tfor(var n = 0; n < node.childNodes.length; n++){", 
    "\t\tvar cnode = node.childNodes[n];", 
    "\t\tif(cnode.nodeType === 1){", 
    "\t\t\telements.push(cnode);", 
    "\t\t}", 
    "\t}", 
    "\t", 
    "\treturn elements;", 
    "}", 
    "", 
    "function readFile(filename) {", 
    "\ttry {", 
    "\t\tvar fileEx = Components.classes[\"@activestate.com/koFileEx;1\"]", 
    "\t\t\t.createInstance(Components.interfaces.koIFileEx);", 
    "\t\tfileEx.URI = filename;", 
    "        fileEx.open('rb');", 
    "        var content = fileEx.readfile();", 
    "        fileEx.close();", 
    "        return content;", 
    "    } catch(e) { ", 
    "        alert(e+ \"filename: \"+filename);", 
    "        return \"\";", 
    "    }", 
    "}", 
    "", 
    "function writeFile(filename, content){", 
    "\ttry {", 
    "\t\tvar fileEx = Components.classes[\"@activestate.com/koFileEx;1\"]", 
    "\t\t\t.createInstance(Components.interfaces.koIFileEx); ", 
    "        fileEx.URI = filename;", 
    "        fileEx.open('wb+');", 
    "        fileEx.puts(content); ", 
    "        fileEx.close();", 
    "    } catch(e) {", 
    "        alert(e+\" filename: \"+filename);", 
    "    }", 
    "}"
  ], 
  "version": "1.0.12", 
  "async": 0, 
  "type": "macro", 
  "icon": "chrome://famfamfamsilk/skin/icons/lightning_go.png"
}